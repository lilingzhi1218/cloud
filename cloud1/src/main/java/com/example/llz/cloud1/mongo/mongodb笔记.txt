在启动类上添加排除MongoAutoConfiguration.class

一、所需依赖
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-data-mongodb</artifactId>
    </dependency>
二、MongoDB
    
三、验证登录MongoDB
  1、当启动MongoDB服务之后，会按照配置文件设置的相关属性，来启动服务。
  注意配置文件中默认是不需要身份验证的，当安装结束之后，要修改配置文件为身份验证模式。
  security:
    authorization: enabled
  2、对于数据库的首次访问，还没有任何的账户权限。非身份验证模式下，可以随意对数据库进行操作。
  身份验证模式下（首次登陆），只能进行数据库的一个账户的创建操作，所以此时应该添加系统账户管理员（userAdminAnyDatabase）。
  如果添加了其他的账户，将会导致数据库因权限不足无法进行任何操作。
    
    数据库的用户及权限，都保存在admin数据库的users中。我们可以使用以下语句创建用户：
    use admin
    db.createUser({
        user:"userAdmin",
        pwd:"3832414122",
        roles:[{ role: "userAdminAnyDatabase",db:"admin"}]
    })
    user：用户名
    pwd：密码
    roles：指定用户的角色。数组的元素必须是对象，且包含两个属性（role-权限，db-已经存在的数据库）
    
    数据库用户角色（Database User Roles）：
    **read：**授予User只读数据的权限
    **readWrite：**授予User读写数据的权限
    
    数据库管理角色（Database Administration Roles）：
    **dbAdmin：**在当前dB中执行管理操作
    **dbOwner：**在当前DB中执行任意操作
    **userAdmin：**在当前DB中管理User
    
    备份和还原角色（Backup and Restoration Roles）：
    backup
    restore
    
    跨库角色（All-Database Roles）：
    **readAnyDatabase：**授予在所有数据库上读取数据的权限
    **readWriteAnyDatabase：**授予在所有数据库上读写数据的权限
    **userAdminAnyDatabase：**授予在所有数据库上管理User的权限
    **dbAdminAnyDatabase：**授予管理所有数据库的权限
    
    集群管理角色（Cluster Administration Roles）：
    clusterAdmin：授予管理集群的最高权限
    clusterManager：授予管理和监控集群的权限，A user with this role can access the config and local databases, which are used in sharding and replication, respectively.
    clusterMonitor：授予监控集群的权限，对监控工具具有readonly的权限
    hostManager：管理Server
    根据用户所需权限，添加对应数据库的管理者。
    
    使用db.auth(“user”,“pwd”);来在shell中切换用户角色。
    
    ————————————————
    版权声明：本文为CSDN博主「konghouy」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
    原文链接：https://blog.csdn.net/konghouy/article/details/90146763